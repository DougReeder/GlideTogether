{"version":3,"file":"glide-together.js","mappings":"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","sources":["webpack://glide-together/./src/settlement-shader-frag.glsl","webpack://glide-together/./src/settlement-shader-vert.glsl","webpack://glide-together/./src/city-terrain.js","webpack://glide-together/./src/shim/requestIdleCallback.js","webpack://glide-together/webpack/bootstrap","webpack://glide-together/webpack/runtime/compat get default export","webpack://glide-together/webpack/runtime/define property getters","webpack://glide-together/webpack/runtime/hasOwnProperty shorthand","webpack://glide-together/./src/elfland-utils.js","webpack://glide-together/./src/state.js","webpack://glide-together/./src/settlement-shader.js","webpack://glide-together/./src/glide-together.js"],"sourcesContent":["module.exports = \"// settlement-shader-frag.glsl - smooth noise, with one pair of colors inside a radius, another pair outside\\n// Copyright © 2019, 2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\\n\\nuniform vec3 colorStreet;\\nuniform vec3 colorYinInside;\\nuniform vec3 colorYangInside;\\nuniform vec3 colorYinOutside;\\nuniform vec3 colorYangOutside;\\nuniform vec3 colorYinWater;\\nuniform vec3 colorYangWater;\\nuniform float radiusSquared;\\n\\nvarying vec3 pos;\\nvarying float sunFactor;\\n\\n//\\tSimplex 3D Noise\\n//\\tby Ian McEwan, Ashima Arts\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\n\\nfloat snoise(vec3 v){\\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n    // First corner\\n    vec3 i  = floor(v + dot(v, C.yyy) );\\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n    // Other corners\\n    vec3 g = step(x0.yzx, x0.xyz);\\n    vec3 l = 1.0 - g;\\n    vec3 i1 = min( g.xyz, l.zxy );\\n    vec3 i2 = max( g.xyz, l.zxy );\\n\\n    //  x0 = x0 - 0. + 0.0 * C\\n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\\n\\n    // Permutations\\n    i = mod(i, 289.0 );\\n    vec4 p = permute( permute( permute(\\n    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n    // Gradients\\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\\n    float n_ = 1.0/7.0; // N=7\\n    vec3  ns = n_ * D.wyz - D.xzx;\\n\\n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\\n\\n    vec4 x_ = floor(j * ns.z);\\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n    vec4 x = x_ *ns.x + ns.yyyy;\\n    vec4 y = y_ *ns.x + ns.yyyy;\\n    vec4 h = 1.0 - abs(x) - abs(y);\\n\\n    vec4 b0 = vec4( x.xy, y.xy );\\n    vec4 b1 = vec4( x.zw, y.zw );\\n\\n    vec4 s0 = floor(b0)*2.0 + 1.0;\\n    vec4 s1 = floor(b1)*2.0 + 1.0;\\n    vec4 sh = -step(h, vec4(0.0));\\n\\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n    vec3 p0 = vec3(a0.xy,h.x);\\n    vec3 p1 = vec3(a0.zw,h.y);\\n    vec3 p2 = vec3(a1.xy,h.z);\\n    vec3 p3 = vec3(a1.zw,h.w);\\n\\n    //Normalise gradients\\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n    p0 *= norm.x;\\n    p1 *= norm.y;\\n    p2 *= norm.z;\\n    p3 *= norm.w;\\n\\n    // Mix final noise value\\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n    m = m * m;\\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n    dot(p2,x2), dot(p3,x3) ) );\\n}\\n\\nvoid main() {\\n    float pct = smoothstep(0.0, 1.0, pos.y);\\n    bool isInside = pos.x * pos.x + pos.z * pos.z < radiusSquared;\\n    vec3 colorYin = mix(\\n    colorYinWater,\\n    isInside ? colorYinInside : colorYinOutside,\\n    pct\\n    );\\n    vec3 colorYang = mix(\\n    colorYangWater,\\n    isInside ? colorYangInside : colorYangOutside,\\n    pct\\n    );\\n\\n    vec3 inherent = mix(\\n    colorYin,\\n    colorYang,\\n    0.5 * (1.0 + snoise(pos*0.4))\\n    );\\n\\n    const float xBlockLength = 270.;\\n    const float zBlockLength = 150.;\\n    float xRemainder = mod(1000. + pos.x, xBlockLength);\\n    float zRemainder = mod(1000. + pos.z, zBlockLength);\\n    bool isStreet = isInside && (xRemainder > 15. && xRemainder < 35. || zRemainder > 15. && zRemainder < 35.) &&\\n                    (abs(pos.x) > 95. || abs(pos.z) > 95.);\\n\\n    vec3 final = isStreet ? colorStreet : inherent * sunFactor;\\n    gl_FragColor = vec4(final, 1.0);\\n}\\n\"","module.exports = \"// settlement-shader-vert.glsl - smooth noise, with one pair of colors inside a radius, another pair outside\\n// Copyright © 2019, 2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\\n\\nuniform vec3 sunNormal;\\n\\nvarying vec3 pos;\\nvarying float sunFactor;\\n\\nvoid main() {\\n    sunFactor = 0.5 + max(dot(normal, sunNormal), 0.0);\\n\\n    vec4 globalPosition = modelMatrix * vec4(position, 1.0);\\n    pos = globalPosition.xyz;\\n    gl_Position = projectionMatrix * viewMatrix * globalPosition;\\n}\\n\"","// city-terrain.js - the landscape geometry for an arctic city\n// Data and code are in one file to avoid asynchronous loading.\n// Copyright © 2023 Doug Reeder; Licensed under the GNU GPL-3.0\n\nconst X_POINTS = 29;\nconst Z_POINTS = 33;\nconst terrainHeights = `\n0   0   0   0   0   0   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n0  40  40  40  40  34  30 23 25 28 30 24 18 13  7 11 14 18 15 11  8  4  8 10 14 15  8  0  0\n0  40  80  80  80  69  60 46 50 55 60 49 37 26 13 22 27 37 30 22 16  8 16 20 27 30 16  6  0\n0  40  80 120 120 103  91 70 76 83 90 73 55 38 20 32 43 55 44 34 23 12 22 32 41 45 19  4  0\n0  40  80 120 160 132 100 73 54 57 64 55 42 25 14 22 30 37 28 18  4  4  4  2  4  4  2  2  0\n0  51 103 127 134 108  95 75 55 36 39 38 28 13  8 11 13 19 14  2  2  2  2  0  2  2  0  0  0\n0  25  64  96  90  84  81 71 50 37 19 20  1  1  1  1  1  1  1  1  1  1  0  0  0  0  0  0  0\n0  12  24  36  48  60  64 55 47 25 19  1  1  1  1  1  1  1  1  1  1  1  1  1  0  0  0  0  0\n0  14  28  42  56  70  41 43 28 23  1  1  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0  0  0\n0  12  24  36  48  60  47 21 22  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0  0\n0  18  36  53  70  55  39 24  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0  0\n0  20  40  60  81  54  28  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0  0\n0  28  57  85  85  57  29  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0  14  43  72  54  37  19  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0  20  40  59  45  30  15  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0  15  30  44  33  22  12  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0  19  38  56  42  29  15  1  1  1  1  1  1  1  1  1  1 -2  1  1  1  1  1  1  1  1  1  1  0\n0  12  24   4   2   2   2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0   4   2   2   0   0   0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0   2   0   0   0   0   0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0   0   0   0   0   0   1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0\n0   0   0   0   2   2   4  4  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  0  0\n0   0   2   2   4  24  16  8  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0\n0   2   4  33  45  37  28 19 10  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0  0\n0   8  17  25  33  33  27 20 14  7  1  1  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0  0  0\n0   6  13  19  25  33  31 24 16  8 10  1  1  1  1  1  1  1  1  1  1  1  1 .6  0  0  2  2  0\n0  11  22  34  39  42  33 24 15 20 16 17  1  1  1  1  1  1  1  1  1  1  0  0  0  2  4  4  0\n0  17  33  50  53  43  33 23 30 33 34 24 18 15 19 14 10  5  3 .6  0  0  0  2  2  4 19  9  0\n0  22  44  65  52  41  30 40 50 51 39 32 27 30 37 28 19  4 .6  0  0  2  2  4 26 41 28 14  0\n0  32  65  48  39  30  21 30 38 38 31 25 35 45 55 41 28  2  0  0  2  4 40 35 39 55 37 18  0\n0  32  42  32  26  20  15 20 25 25 20 17 23 30 37 27 18  2  0  0  2 16 27 23 26 37 23 12  0\n0  16  21  16  13  10   7 10 12 12 10  8 11 15 18 14  9 .5  0  0  2  8 13 12 13 18 12  6  0\n0   0   0   0   0   0   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n`;\n\n\nAFRAME.registerGeometry('city-terrain', {\n  schema: {\n    spacing: {default: 100},\n    sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n  },\n\n  init: function (data) {\n    // Creates geometry.\n    const geometry = new THREE.PlaneGeometry((X_POINTS - 1) * data.spacing, (Z_POINTS - 1) * data.spacing, X_POINTS - 1, Z_POINTS - 1);\n    geometry.rotateX(-Math.PI / 2);\n    const vertices = geometry.attributes.position.array;\n    const floatPatt = /\\s*\\S+/y;\n    let match, i = 0;\n    while (match = floatPatt.exec(terrainHeights)) {\n      const height = parseFloat(match[0]);\n      vertices[i * 3 + 1] = height;\n      ++i;\n    }\n    geometry.computeVertexNormals();\n    this.geometry = geometry;\n  }\n});\n","/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// elfland-utils.js - common functions for Elfland Glider & Glide Together\n// Copyright © 2018-2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\nfunction placeholderTexture(colorArg = '#808080', width = 1, height = 1) {\n    const size = width * height;\n    const data = new Uint8Array( 4 * size );\n\n    let color;\n    if (colorArg.isColor) {\n        color = colorArg;\n    } else {\n        color = new THREE.Color(colorArg);\n    }\n    const r = Math.floor(color.r * 255);\n    const g = Math.floor(color.g * 255);\n    const b = Math.floor(color.b * 255);\n\n    for (let i = 0; i < size; ++i ) {\n        const stride = i * 4;\n        data[stride] = r;\n        data[stride + 1] = g;\n        data[stride + 2] = b;\n        data[stride + 3] = 255;\n    }\n\n    const texture = new THREE.DataTexture(data, width, height);\n    texture.needsUpdate = true;\n    return texture;\n}\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, placeholderTexture, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Glide Together\n// Copyright © 2017-2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.56;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\nconst BAD_CRASH_SPEED = 30;\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT' or 'RIGHT'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudAirspeedAngle: 0,\n        hudAirspeedColor: 'forestgreen',\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    nonBindedStateKeys: ['armatureEl', 'gliderEl', 'cameraEl', 'leftHandEl', 'rightHandEl',\n        'controllerConnections', 'isAnyPressedLeft', 'xSetting', 'zSetting', 'controlStickEl',\n        'controlNeutralHeight', 'controlMode', 'controlSubmode',\n        'gliderPositionStart', 'gliderRotationYStart'],\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.cacheSound(state, '../assets/411460__inspectorj__power-up-bright-a.mp3', 1.0, 'powerup');\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            // It's best to re-use ThreeJS objects and not store objects in state.\n            this.quaternion = new THREE.Quaternion();\n            this.euler = new THREE.Euler();\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                }, {timeout: 10_000});\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    this.cacheAndPlaySound(state, '../assets/198876__bone666138__crash.mp3');\n\n                    setTimeout(() => {\n                        // console.log(\"setting start position\", state.gliderPositionStart);\n                        state.gliderPosition.x = state.gliderPositionStart.x;\n                        state.gliderPosition.y = state.gliderPositionStart.y;\n                        state.gliderPosition.z = state.gliderPositionStart.z;\n                        state.gliderRotationX = 0;\n                        state.gliderRotationY = state.gliderRotationYStart;\n                        state.gliderSpeed = 5;\n                        state.controlSubmode = 'NONE';\n                        this.controlStickToNeutral(state);\n                        state.hudAirspeedAngle = 0;\n                        state.hudAirspeedColor = 'forestgreen';\n                        state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                        state.cameraEl.object3D.rotation.y = 0;\n                        state.cameraEl.object3D.rotation.z = 0;\n                        setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.playSound(state, 'powerup');\n                    } else if (el.classList.contains('star')) {\n                        ++state.stars;\n                        console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode?.removeChild(el);\n                        this.playSound(state, 'ding');\n                    } else if ('key' === el.id) {\n                        state.questComplete = true;\n                        this.cacheAndPlaySound(state, '../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3');\n                        el.parentNode?.removeChild(el);\n                        const keyEnt = document.createElement('a-entity');\n                        keyEnt.setAttribute('id', 'keyCaptured');\n                        keyEnt.setAttribute('gltf-model', '#keyModel');\n                        keyEnt.setAttribute('position', '-0.85 0.20 -1.00');\n                        keyEnt.setAttribute('rotation', '0 0 90');\n                        keyEnt.setAttribute('scale', '10 10 10');\n                        state.gliderEl.appendChild(keyEnt);\n                        for (const entity of document.querySelectorAll('[dark-elf]')) {\n                            console.info(\"dark elf pursuing\");\n                            entity.setAttribute('dark-elf', 'goalSelector', '#armature');\n                        }\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            this.cacheAndPlaySound(state, url, volume);\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftHandEl = document.getElementById(\"leftHand\");\n            state.rightHandEl = document.getElementById(\"rightHand\");\n            if (isDesktop()) {\n                state.leftHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.handHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.handHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.handHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.handHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftHandEl?.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.addEventListener('buttonup', this.rightUpHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftHandEl?.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.removeEventListener('buttonup', this.rightUpHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        handHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftHandEl?.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightHandEl?.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT';\n                        break;\n                }\n            }\n            console.log(\"controlSubmode:\", state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.object3D.quaternion.set(0, 0, 0, 1);\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.cacheSound(state, '../assets/393633__daronoxus__ding.mp3', 1.0, 'ding');\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                setTimeout(() => {\n                    this.cacheAndPlaySound(state, postlaunchHelp.src)\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            const existingHelp = prelaunchHelp?.getAttribute('value');\n            if (prelaunchHelp && !existingHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // A pause in the action is better than flying blind\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    let quaternion;\n                    const leftHandPos = state.leftHandEl?.getAttribute(\"position\");\n                    const rightHandPos = state.rightHandEl?.getAttribute(\"position\");\n                    switch (state.controlSubmode) {\n                        case \"LEFT\":\n                            quaternion = state.leftHandEl.object3D.quaternion;\n\n                            state.controlStickEl.setAttribute('position', leftHandPos);\n                           break;\n                        case \"RIGHT\":\n                            quaternion = state.rightHandEl.object3D.quaternion;\n\n                            state.controlStickEl.setAttribute('position', rightHandPos);\n                            break;\n                        case \"NONE\":\n                            this.quaternion.identity();\n                            quaternion = this.quaternion;\n                            // TODO: slow decay to neutral?\n                            break;\n                    }\n                    state.controlStickEl.object3D?.quaternion?.copy(quaternion)\n\n                    this.euler.setFromQuaternion(quaternion, 'XZY');\n                    state.xSetting = this.euler.x * 180 / Math.PI;\n                    this.euler.setFromQuaternion(quaternion, 'ZXY');\n                    state.zSetting = this.euler.z * 180 / Math.PI;\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                state.hudAirspeedAngle = Math.min(state.gliderSpeed * 9, 359);\n                state.hudAirspeedColor = state.gliderSpeed < BAD_CRASH_SPEED ? 'forestgreen' : 'goldenrod';\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        cacheSound(_state, url, volume = 1.0, alias) {\n            if (!this.sounds) {\n                this.sounds = {};\n            }\n            if (! this.sounds[url]) {\n                this.sounds[url] = new Howl({src: url, volume: volume, autoplay: false});\n            }\n            if (alias) {\n                this.sounds[alias] = this.sounds[url];\n            }\n        },\n\n        playSound(_state, urlOrAlias) {\n            this.sounds?.[urlOrAlias]?.play();\n        },\n\n        cacheAndPlaySound(_state, url, volume = 1.0, alias) {\n            if (!this.sounds) {\n                this.sounds = {};\n            }\n            if (this.sounds[url]) {\n                this.sounds[url].play();\n            } else {\n                this.sounds[url] = new Howl({src: url, volume: volume, autoplay: true});\n                this.sounds[alias] = this.sounds[url];\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.MathUtils.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.30;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.40;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(25.0);\n            hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-15.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.45;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.15;\n                hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(15.0);\n                hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            if (!newState.questComplete) {\n                newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n                if (newState.questComplete) {\n                    AFRAME.scenes[0].emit('cacheAndPlaySound', '../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3');\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// settlement-shader.js - smooth noise, with one pair of colors inside a radius, another pair outside\n// Copyright © 2019, 2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n// The produced texture is a mix of the specified colors.\n// Faces will be 50% brighter in direct sun and 50% darker when facing away from the sun.\n// Example: material=\"shader:settlement; colorYinInside:#63574d\"\n\nimport vertexShader from './settlement-shader-vert.glsl';\nimport fragmentShader from './settlement-shader-frag.glsl';\n\nAFRAME.registerShader('settlement', {\n    schema: {\n        colorStreet: {type: 'color', default: '#343432'},   // asphalt\n        colorYinInside: {type: 'color', default: '#599432'},   // grass green\n        colorYangInside: {type: 'color', default: '#557736'},   // dark green\n        colorYinOutside: {type: 'color', default: '#e8e5e2'},   // off white\n        colorYangOutside: {type: 'color', default: '#d8d2d0'},   // darker off white\n        colorYinWater: {type: 'color', default: '#006994'},   // water blue\n        colorYangWater: {type: 'color', default: '#005b89'},   // darker water blue\n        radius: {type: 'number', default: 1000},\n        sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n    },\n\n    /**\n     * `init` used to initialize material. Called once.\n     */\n    init: function (data) {\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                colorStreet: {value: new THREE.Color(data.colorStreet)},\n                colorYinInside: {value: new THREE.Color(data.colorYinInside)},\n                colorYangInside: {value: new THREE.Color(data.colorYangInside)},\n                colorYinOutside: {value: new THREE.Color(data.colorYinOutside)},\n                colorYangOutside: {value: new THREE.Color(data.colorYangOutside)},\n                colorYinWater: {value: new THREE.Color(data.colorYinWater)},\n                colorYangWater: {value: new THREE.Color(data.colorYangWater)},\n                radiusSquared: {value: data.radius * data.radius},\n                sunNormal: {value: sunPos.normalize()}\n            },\n            vertexShader: vertexShader,\n            fragmentShader: fragmentShader\n        });\n    },\n    /**\n     * `update` used to update the material. Called on initialization and when data updates.\n     */\n    update: function (data) {\n        this.material.uniforms.colorStreet.value.set(data.colorStreet);\n        this.material.uniforms.colorYinInside.value.set(data.colorYinInside);\n        this.material.uniforms.colorYangInside.value.set(data.colorYangInside);\n        this.material.uniforms.colorYinOutside.value.set(data.colorYinOutside);\n        this.material.uniforms.colorYangOutside.value.set(data.colorYangOutside);\n        this.material.uniforms.colorYinWater.value.set(data.colorYinWater);\n        this.material.uniforms.colorYangWater.value.set(data.colorYangWater);\n        this.material.uniforms.radiusSquared.value = data.radius * data.radius;\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material.uniforms.sunNormal.value = sunPos.normalize();\n    },\n});\n","// glide-together.js - a domed arctic city, for Glide Together\n// Copyright © 2019-2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\nimport {isDesktop, setEnvironmentalSound} from \"../src/elfland-utils\";\nimport './state.js'\nimport './city-terrain';\nimport './settlement-shader.js'\n// import './intro.js'\n\nconst LAUNCH_X_CORE_SECTIONS = 5;\nconst LAUNCH_Z_CORE_SECTIONS = 5;\nconst LAUNCH_Y_SECTIONS = 20;\nconst LAUNCH_X_PROPORTION = 5;\nconst LAUNCH_Z_PROPORTION = 5;\nconst LAUNCH_Y_PROPORTION = 5;\nconst INITIAL_POSITION = {x: 420 - LAUNCH_X_CORE_SECTIONS * LAUNCH_X_PROPORTION + 1,\n  y: LAUNCH_Y_SECTIONS * LAUNCH_Y_PROPORTION + 3,\n  z: 420 - LAUNCH_Z_CORE_SECTIONS * LAUNCH_Z_PROPORTION + 1};\nconst INITIAL_ROTATION_X = 0;\nconst INITIAL_ROTATION_Y = 45;\nconst CITY_RADIUS_SQ = 921600;\nAFRAME.registerComponent('glide-together', {\n  init: function () {\n    // setEnvironmentalSound('Gabriel Baker - Worlds.mp3', 0.2);\n\n    let sceneEl = this.el;\n    sceneEl.emit('setState', {\n      gliderPositionStart: INITIAL_POSITION,\n      gliderPosition: {x: INITIAL_POSITION.x, y: INITIAL_POSITION.y, z: INITIAL_POSITION.z},\n      gliderRotationX: INITIAL_ROTATION_X,\n      gliderRotationY: INITIAL_ROTATION_Y,\n      gliderRotationYStart: INITIAL_ROTATION_Y\n    });\n\n\n    // creates random buildings that fit under the dome\n    const numStyles = 6;\n    let buildings = this.randomBuildings(numStyles);   // array of arrays\n\n    let buildingEls = new Array(numStyles);\n\n    buildingEls[0] = document.createElement('a-shader-buildings');\n    buildingEls[0].setAttribute('x-proportion-geometry', 5);\n    buildingEls[0].setAttribute('x-proportion-material', 5);\n    buildingEls[0].setAttribute('z-proportion-geometry', 5);\n    buildingEls[0].setAttribute('z-proportion-material', 5);\n    buildingEls[0].setAttribute('y-proportion-geometry', 3.5);\n    buildingEls[0].setAttribute('y-proportion-material', 3.5);\n    buildingEls[0].setAttribute('window-width', -0.5);\n    buildingEls[0].setAttribute('window-height', 0.0);\n    buildingEls[0].setAttribute('wall-color', '#5A5550');   // dark gray\n    buildingEls[0].setAttribute('wall-src', '#concreteAggregate');\n    buildingEls[0].setAttribute('wall-zoom', 1.5);\n    buildingEls[0].setAttribute('window-opacity', '0.9');\n\n    buildingEls[1] = document.createElement('a-shader-buildings');\n    buildingEls[1].setAttribute('x-proportion-geometry', 6);\n    buildingEls[1].setAttribute('x-proportion-material', 6);\n    buildingEls[1].setAttribute('z-proportion-geometry', 6);\n    buildingEls[1].setAttribute('z-proportion-material', 6);\n    buildingEls[1].setAttribute('y-proportion-geometry', 5.5);\n    buildingEls[1].setAttribute('y-proportion-material', 5.5);\n    buildingEls[1].setAttribute('window-width', 0.95);\n    buildingEls[1].setAttribute('window-height', 0.0);\n    buildingEls[1].setAttribute('wall-color', '#75706D');   // light gray\n    buildingEls[1].setAttribute('wall-src', '#concreteBlocks');\n    buildingEls[1].setAttribute('wall-zoom', 2.5);\n    buildingEls[1].setAttribute('px', '#vr-ok-px');\n    buildingEls[1].setAttribute('nx', '#vr-ok-nx');\n    buildingEls[1].setAttribute('py', '#vr-ok-py');\n    buildingEls[1].setAttribute('ny', '#vr-ok-ny');\n    buildingEls[1].setAttribute('nz', '#vr-ok-nz');\n    buildingEls[1].setAttribute('window-opacity', '0.6');\n\n    buildingEls[2] = document.createElement('a-shader-buildings');\n    buildingEls[2].setAttribute('wall-color', '#614031');   // brick red\n    buildingEls[2].setAttribute('wall-src', '#brick');\n    buildingEls[2].setAttribute('wall-zoom', 2.25);\n    buildingEls[2].setAttribute('equirectangular', '#reading-room');\n    buildingEls[2].setAttribute('window-opacity', '0.7');\n\n    buildingEls[3] = document.createElement('a-shader-buildings');\n    buildingEls[3].setAttribute('x-proportion-geometry', 6);\n    buildingEls[3].setAttribute('x-proportion-material', 6);\n    buildingEls[3].setAttribute('z-proportion-geometry', 6);\n    buildingEls[3].setAttribute('z-proportion-material', 6);\n    buildingEls[3].setAttribute('y-proportion-geometry', 4.5);\n    buildingEls[3].setAttribute('y-proportion-material', 4.5);\n    buildingEls[3].setAttribute('window-width', -0.5);\n    buildingEls[3].setAttribute('window-height', 0.3);\n    buildingEls[3].setAttribute('wall-color', '#716049');   // brown brick\n    buildingEls[3].setAttribute('wall-src', '#medievalBrick1');\n    buildingEls[3].setAttribute('wall-zoom', 3.5);\n    buildingEls[3].setAttribute('px', '#hotel-px');\n    buildingEls[3].setAttribute('nx', '#hotel-nx');\n    buildingEls[3].setAttribute('py', '#hotel-py');\n    buildingEls[3].setAttribute('ny', '#hotel-ny');\n    buildingEls[3].setAttribute('nz', '#hotel-nz');\n    buildingEls[3].setAttribute('window-opacity', '0.5');\n\n    buildingEls[4] = document.createElement('a-shader-buildings');\n    buildingEls[4].setAttribute('y-proportion-geometry', 5);\n    buildingEls[4].setAttribute('y-proportion-material', 5);\n    buildingEls[4].setAttribute('window-width', 0.5);\n    buildingEls[4].setAttribute('window-height', 0.0);\n    buildingEls[4].setAttribute('wall-color', '#B8ADA1');   // tan\n    buildingEls[4].setAttribute('wall-src', '#stoneBlocks');\n    buildingEls[4].setAttribute('wall-zoom', 5.0);\n    buildingEls[4].setAttribute('equirectangular', '#reading-room');\n    buildingEls[4].setAttribute('window-opacity', '0.7');\n\n    buildingEls[5] = document.createElement('a-shader-buildings');\n    buildingEls[5].setAttribute('window-width', 0.8);\n    buildingEls[5].setAttribute('window-height', -0.1);\n    buildingEls[5].setAttribute('wall-color', '#9F9279');   // beige\n    buildingEls[5].setAttribute('wall-src', '#medievalBrick2');\n    buildingEls[5].setAttribute('wall-zoom', 5.0);\n    buildingEls[5].setAttribute('px', '#vr-ok-px');\n    buildingEls[5].setAttribute('nx', '#vr-ok-nx');\n    buildingEls[5].setAttribute('py', '#vr-ok-py');\n    buildingEls[5].setAttribute('ny', '#vr-ok-ny');\n    buildingEls[5].setAttribute('nz', '#vr-ok-nz');\n    buildingEls[5].setAttribute('window-opacity', '0.6');\n\n    for (let s=0; s<numStyles; ++s) {\n      buildingEls[s].setAttribute('elevation-geometry', 1);\n      buildingEls[s].setAttribute('elevation-material', 1);\n      buildingEls[s].setAttribute('sun-position', \"-1 0.5 1\");\n      buildingEls[s].setAttribute('buildings', JSON.stringify(buildings[s]));\n      buildingEls[s].classList.add('landscape');\n      sceneEl.appendChild(buildingEls[s]);\n    }\n\n\n    let domeEl = document.createElement('a-entity');\n    domeEl.setAttribute('obj-model', isDesktop() ? 'obj:../assets/dome16.obj' : 'obj:#dome-obj-mobile');\n    if (isDesktop()) {THREE.Cache.remove(\"../assets/dome14.obj\");}\n    domeEl.setAttribute('material','shader:flat; color:#222; wireframe:true; side:back');\n    domeEl.classList.add('landscape');\n    sceneEl.appendChild(domeEl);\n\n\n    for (let p=0; p<4; ++p) {\n      let powerupEl = document.createElement('a-entity');\n      powerupEl.setAttribute('class', 'powerup');\n      powerupEl.setAttribute('position', this.randomIntersection());\n      powerupEl.setAttribute('geometry', {primitive:'triangle', vertexA:'-1.5 -1.5 -1.5', vertexB:'1.5 -1.5 1.5', vertexC:'1.5 1.5 -1.5'});\n      powerupEl.setAttribute('material', {visible:false});\n\n      let powerupInnerEl = document.createElement('a-icosahedron');\n      powerupInnerEl.setAttribute('material', {color:'#ff0000'});\n\n      powerupEl.appendChild(powerupInnerEl);\n      sceneEl.appendChild(powerupEl);\n    }\n\n  },\n\n  // tick: function (time) {\n  // }\n\n  randomBuildings: function (numStyles) {\n    let buildings = new Array(numStyles);\n    for (let s=0; s<numStyles; ++s) {\n      buildings[s] = [];\n    }\n    // increments x by the common multiple of x-proportion for building styles\n    for (let i=0, x=-930; x <= 930; ++i, i%4 ? x+= 60 : x+=90) {\n      // increments z by the common multiple of z-proportion for building styles\n      for (let j=0, z=-930; z<=930; ++j, j%2 ? z+=60 : z+=90) {\n        if (Math.abs(x) <= 60 && Math.abs(z) <= 60) {\n          continue;\n        }\n\n        const MAX_HEIGHT_SQ = 36864;\n        const AVG_STORY = 5;\n\n        let xCoreSections = 1 + Math.floor(Math.random() * 5);\n        let xWingSections = Math.floor(Math.random() * 6);\n        let zCoreSections = 1 + Math.floor(Math.random() * 5);\n        let zWingSections = Math.floor(Math.random() * 6);\n\n        let maxStories = Math.sqrt((1 - x*x/CITY_RADIUS_SQ - z*z/CITY_RADIUS_SQ)*MAX_HEIGHT_SQ) / AVG_STORY;\n        if (isNaN(maxStories)) {\n          continue;\n        }\n        let ySections = Math.ceil((Math.exp(Math.random()) - 0.99999) * 20 * maxStories / 35) + Math.random() * 0.2;\n        if (ySections < 1) {\n          continue;\n        }\n\n        // sanity-checks proportions\n        if (xWingSections >= 2 && zCoreSections < 2) {\n          ++zCoreSections\n        }\n        if (zWingSections >= 2 && xCoreSections < 2) {\n          ++xCoreSections\n        }\n        if (ySections >= 2) {\n          while (xCoreSections + xWingSections < 2) {\n            ++xCoreSections;\n          }\n          while (zCoreSections + zWingSections < 2) {\n            ++zCoreSections;\n          }\n        }\n        if (ySections >= 10) {\n          while (zCoreSections + zWingSections < 3) {\n            ++zCoreSections;\n          }\n        }\n        if (ySections >= 20) {\n          while (xCoreSections + xWingSections < 3) {\n            ++xCoreSections;\n          }\n        }\n\n        let building = {\n          x: x,\n          z: z,\n          xCoreSections: xCoreSections,\n          xWingSections: xWingSections,\n          zCoreSections: zCoreSections,\n          zWingSections: zWingSections,\n          ySections: ySections,\n        };\n\n        let style = Math.floor(Math.random() * numStyles);\n        if (0 === style % 2) {\n          // makes some walls blank (only works if windowWidth is not too great)\n          if (zCoreSections <= 2 && Math.random() < 0.3) {\n            building.xWingSections += 0.15;\n          } else if (xCoreSections <= 2 && Math.random() < 0.3) {\n            building.zWingSections += 0.15;\n          } else if (zCoreSections + zWingSections <= 4.5 && Math.random() < 0.1) {\n            building.xCoreSections += 0.15;\n          } else if (xCoreSections + xWingSections <= 4.5 && Math.random() < 0.1) {\n            building.zCoreSections += 0.15;\n          }\n        }\n        if (20 === i && 18 === j) {\n          building.xCoreSections = LAUNCH_X_CORE_SECTIONS;\n          building.zCoreSections = LAUNCH_Z_CORE_SECTIONS;\n          building.ySections = LAUNCH_Y_SECTIONS;\n          style = 4;   // x-proportion = z-proportion = y-proportion = 5\n        }\n        buildings[style].push(building);\n      }\n    }\n    return buildings;\n  },\n\n  randomIntersection: function () {\n    let x, z;\n    do {\n      x = -975 + Math.floor(Math.random() * 8) * 270;\n      z = -975 + Math.floor(Math.random() * 14) * 150;\n    } while (x*x + z*z >= CITY_RADIUS_SQ);\n    const y = 8.5;\n    return x + ' ' + y + ' ' + z;\n  }\n});\n"],"names":["module","exports","AFRAME","registerGeometry","schema","spacing","default","sunPosition","type","x","y","z","init","data","geometry","THREE","PlaneGeometry","X_POINTS","Z_POINTS","rotateX","Math","PI","vertices","attributes","position","array","floatPatt","match","i","exec","height","parseFloat","computeVertexNormals","this","window","requestIdleCallback","cb","setTimeout","start","Date","now","didTimeout","timeRemaining","max","cancelIdleCallback","id","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","lockLandscapeOrientation","screen","orientation","lock","then","response","console","log","catch","err","warn","isDesktop","utils","device","isMobile","isMobileVR","isMagicWindow","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","distance","verticalAngleRad","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","document","addEventListener","registerState","initialState","armatureEl","gliderEl","cameraEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","time","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudAirspeedAngle","hudAirspeedColor","controlsReminderDisplayed","debug","nonBindedStateKeys","handlers","setState","state","values","pName","setArmatureEl","cacheSound","hasNativeWebXRImplementation","hasNativeWebVRImplementation","quaternion","Quaternion","euler","Euler","querySelector","dustEl","components","dust","setCamera","timeout","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","object3D","setAttribute","evt","detail","intersections","length","els","tagName","getAttribute","far","emit","cacheAndPlaySound","controlStickToNeutral","rotation","showControlsReminder","bind","intersectedEls","forEach","el","classList","contains","playSound","parentNode","removeChild","keyEnt","createElement","appendChild","entity","querySelectorAll","info","url","volume","text","subtitle","code","getElementById","leftDownHandler","handHandler","leftUpHandler","rightDownHandler","rightUpHandler","controllerconnected","component","adjustControlMode","controllerdisconnected","oldControlMode","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","cameraPos","set","buttondown","action","countYellowStars","launch","prelaunchHelp","promise","canvasEl","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","Promise","resolve","goFullscreenLandscape","postlaunchHelp","src","hover","loaded","startInteraction","intro","existingHelp","iterate","timeDelta","min","cameraRotation","cameraRotX","leftHandPos","rightHandPos","identity","copy","setFromQuaternion","xDiff","xChange","sign","abs","newXrot","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","_state","alias","sounds","Howl","autoplay","urlOrAlias","play","placeInGliderPath","random","variation","newPos","MathUtils","degToRad","scale","computeState","newState","payload","error","registerComponent","tick","registerShader","colorStreet","colorYinInside","colorYangInside","colorYinOutside","colorYangOutside","colorYinWater","colorYangWater","radius","sunPos","Vector3","material","ShaderMaterial","uniforms","value","Color","radiusSquared","sunNormal","normalize","vertexShader","fragmentShader","update","INITIAL_POSITION","LAUNCH_Y_SECTIONS","CITY_RADIUS_SQ","sceneEl","buildings","randomBuildings","buildingEls","Array","s","JSON","stringify","add","domeEl","Cache","remove","p","powerupEl","randomIntersection","primitive","vertexA","vertexB","vertexC","powerupInnerEl","color","numStyles","j","MAX_HEIGHT_SQ","AVG_STORY","xCoreSections","floor","xWingSections","zCoreSections","zWingSections","maxStories","isNaN","ySections","ceil","exp","building","style","push"],"sourceRoot":""}